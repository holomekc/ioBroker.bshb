name: Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
  workflow_dispatch:


# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Performs quick checks before the expensive test runs
  check-and-lint:
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - uses: ioBroker/testing-action-check@v1
        with:
          node-version: ${{ matrix.node-version }}
          # Uncomment the following line if your adapter cannot be installed using 'npm ci'
          # install-command: 'npm install'
          type-checking: true
          lint: true

  # Runs adapter tests on all supported node versions and OSes
  adapter-tests:
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    needs: [ check-and-lint ]

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [ 20.x, 22.x ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: ioBroker/testing-action-adapter@v1
        with:
          node-version: ${{ matrix.node-version }}
          os: ${{ matrix.os }}
          # Uncomment the following line if your adapter cannot be installed using 'npm ci'
          # install-command: 'npm install'
          build: true

  # Release the final package to NPM
  release:
    needs: [ adapter-tests ]

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch tags
        # Needed to extract tag later on
        run: git fetch --prune --unshallow

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Extract the version from the tag
        id: extract_release
        run: |
          echo "version=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_OUTPUT

      - name: Extract changelog
        id: extract_changelog
        uses: sean0x42/markdown-extract@v2
        with:
          file: README.md
          pattern: ${{ steps.extract_release.outputs.version }}

      - name: Install Dependencies
        run: npm ci
      - name: Create a clean build
        run: npm run pack

      - name: Publish package to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm whoami
          npm publish

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_release.outputs.version }}
          release_name: ${{ steps.extract_release.outputs.version }}
          draft: false
          prerelease: false
          body: ${{ steps.extract_changelog.outputs.markdown }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./iobroker.bshb-${{ steps.extract_release.outputs.version }}.tgz
          asset_name: iobroker.bshb-${{ steps.extract_release.outputs.version }}.tgz
          asset_content_type: application/gzip
